{"mappings":"AAAA;AAEA,MAAM,OAAO;OAAI,SAAS,gBAAgB,CAAC;CAAM;AACjD,MAAM,UAAU,SAAS,aAAa,CAAC;AAEvC,MAAM,eAAe,CAAC,gBACpB,cAAc,GAAG,CAAC,CAAC,SAAY,CAAA;YAC7B,MAAM,OAAO,SAAS;YACtB,UAAU,OAAO,OAAO,CAAC,QAAQ;YACjC,QAAQ,CAAC,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC;YACxD,KAAK,CAAC,OAAO,OAAO,CAAC,GAAG;QAC1B,CAAA;AAEF,MAAM,iBAAiB,CAAC,gBACtB;WAAI;KAAc,CACf,IAAI,CACH,CAAC,GAAG,IACF,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,MAC1C,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,KAE7C,OAAO,CAAC,CAAC,SAAW,QAAQ,qBAAqB,CAAC,cAAc;AAErE,aAAa;AACb,eAAe","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst list = [...document.querySelectorAll('li')];\nconst newlist = document.querySelector('ul');\n\nconst getEmployees = (listEmployees) =>\n  listEmployees.map((person) => ({\n    name: person.innerText,\n    position: person.dataset.position,\n    salary: +person.dataset.salary.slice(1).split(',').join(''),\n    age: +person.dataset.age,\n  }));\n\nconst createSortList = (listEmployees) =>\n  [...listEmployees]\n    .sort(\n      (a, b) =>\n        a.dataset.salary.slice(1).split(',').join('') -\n        b.dataset.salary.slice(1).split(',').join(''),\n    )\n    .forEach((person) => newlist.insertAdjacentElement('afterbegin', person));\n\ngetEmployees(list);\ncreateSortList(list);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}